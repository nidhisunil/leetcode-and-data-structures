# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:
        
        
        def bfs(root):
            if not root:
                return []

            result = []
            queue = deque([root])

            while queue:
                node = queue.popleft()
                result.append(node.val)

                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
            
            return result 
        print("output?")
        new_list = bfs(root)
        new_list.sort()
        return new_list[k-1]
